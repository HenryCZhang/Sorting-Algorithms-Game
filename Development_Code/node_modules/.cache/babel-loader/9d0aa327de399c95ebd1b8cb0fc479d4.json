{"ast":null,"code":"var _jsxFileName = \"/Users/zhangcao/Desktop/OWL/3350/se3350_project-group-15/Development Code/src/component/Level2.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Level2() {\n  _s();\n\n  const [ArrayLength, setArrayLength] = useState();\n  const [NumberArray, setNumberArray] = useState([]);\n  let newArray;\n\n  function generateNumberArray() {\n    // setNumberArray(\n    //   Array.from({ length: {ArrayLength} }, () => Math.floor(Math.random() * 40))\n    // );\n    newArray = Array.from({\n      length: ArrayLength\n    }, () => Math.floor(Math.random() * 40));\n  }\n\n  generateNumberArray();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => {\n        setArrayLength(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          setNumberArray(newArray);\n        },\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: NumberArray.map((num, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Level2, \"XcIya03dbq35OJ0KweWUECj3ZIk=\");\n\n_c = Level2;\nexport default Level2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Level2\");","map":{"version":3,"sources":["/Users/zhangcao/Desktop/OWL/3350/se3350_project-group-15/Development Code/src/component/Level2.js"],"names":["React","useState","Level2","ArrayLength","setArrayLength","NumberArray","setNumberArray","newArray","generateNumberArray","Array","from","length","Math","floor","random","e","target","value","map","num","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,EAA9C;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AAEA,MAAIM,QAAJ;;AAEA,WAASC,mBAAT,GAA+B;AAC7B;AACA;AACA;AACAD,IAAAA,QAAQ,GAAGE,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAER;AAAV,KAAX,EAAoC,MAC7CS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CADS,CAAX;AAGD;;AAEDN,EAAAA,mBAAmB;AAErB,sBAAO;AAAA,4BACH;AACE,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACfX,QAAAA,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,YADG,eAMH;AAAA,6BACE;AACE,QAAA,OAAO,EAAGF,CAAD,IAAO;AACdT,UAAAA,cAAc,CAACC,QAAD,CAAd;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANG,eAeH;AAAA,gBACGF,WAAW,CAACa,GAAZ,CAAgB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC/B,4BAAO;AAAA,oBAAkBD;AAAlB,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAfG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAqBD;;GAtCQlB,M;;KAAAA,M;AAwCT,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useState } from \"react\";\n\nfunction Level2() {\n    const [ArrayLength, setArrayLength] = useState();\n    const [NumberArray, setNumberArray] = useState([]);\n  \n    let newArray;\n  \n    function generateNumberArray() {\n      // setNumberArray(\n      //   Array.from({ length: {ArrayLength} }, () => Math.floor(Math.random() * 40))\n      // );\n      newArray = Array.from({ length: ArrayLength }, () =>\n        Math.floor(Math.random() * 40)\n      );\n    }\n  \n    generateNumberArray();\n\n  return <div>\n      <input\n        onChange={(e) => {\n          setArrayLength(e.target.value);\n        }}\n      ></input>\n      <div>\n        <button\n          onClick={(e) => {\n            setNumberArray(newArray);\n          }}\n        >\n          start\n        </button>\n      </div>\n      <div>\n        {NumberArray.map((num, index) => {\n          return <div key={index}>{num}</div>;\n        })}\n      </div>\n  </div>;\n}\n\nexport default Level2;\n"]},"metadata":{},"sourceType":"module"}